<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="30" passed="30">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="621342" started-at="2023-01-05T13:11:06 GST" finished-at="2023-01-05T13:21:28 GST">
    <groups>
      <group name="Regression">
        <method signature="AddPurchaseTest.RemoveDocInAddPurchase()[pri:3, instance:TestcaseScripts.AddPurchaseTest@72057ecf]" name="RemoveDocInAddPurchase" class="TestcaseScripts.AddPurchaseTest"/>
        <method signature="AddPurchaseTest.addNewPurchase()[pri:8, instance:TestcaseScripts.AddPurchaseTest@72057ecf]" name="addNewPurchase" class="TestcaseScripts.AddPurchaseTest"/>
        <method signature="AddPurchaseTest.addPurchaseWithoutLocation()[pri:6, instance:TestcaseScripts.AddPurchaseTest@72057ecf]" name="addPurchaseWithoutLocation" class="TestcaseScripts.AddPurchaseTest"/>
        <method signature="AddPurchaseTest.addPurchaseWithoutProduct()[pri:7, instance:TestcaseScripts.AddPurchaseTest@72057ecf]" name="addPurchaseWithoutProduct" class="TestcaseScripts.AddPurchaseTest"/>
        <method signature="AddPurchaseTest.addPurchaseWithoutStatus()[pri:5, instance:TestcaseScripts.AddPurchaseTest@72057ecf]" name="addPurchaseWithoutStatus" class="TestcaseScripts.AddPurchaseTest"/>
        <method signature="AddPurchaseTest.addPurchaseWithoutSupplier()[pri:4, instance:TestcaseScripts.AddPurchaseTest@72057ecf]" name="addPurchaseWithoutSupplier" class="TestcaseScripts.AddPurchaseTest"/>
        <method signature="AddPurchaseTest.addSupplierDetails()[pri:1, instance:TestcaseScripts.AddPurchaseTest@72057ecf]" name="addSupplierDetails" class="TestcaseScripts.AddPurchaseTest"/>
        <method signature="AddPurchaseTest.attachDocInAddPurchase()[pri:2, instance:TestcaseScripts.AddPurchaseTest@72057ecf]" name="attachDocInAddPurchase" class="TestcaseScripts.AddPurchaseTest"/>
        <method signature="AddPurchaseTest.checkWithGrandTotalAdded()[pri:12, instance:TestcaseScripts.AddPurchaseTest@72057ecf]" name="checkWithGrandTotalAdded" class="TestcaseScripts.AddPurchaseTest"/>
        <method signature="AddPurchaseTest.checkWithLocationAdded()[pri:10, instance:TestcaseScripts.AddPurchaseTest@72057ecf]" name="checkWithLocationAdded" class="TestcaseScripts.AddPurchaseTest"/>
        <method signature="AddPurchaseTest.checkWithPurchaseStatusAdded()[pri:11, instance:TestcaseScripts.AddPurchaseTest@72057ecf]" name="checkWithPurchaseStatusAdded" class="TestcaseScripts.AddPurchaseTest"/>
        <method signature="AddPurchaseTest.checkWithSupplierAdded()[pri:9, instance:TestcaseScripts.AddPurchaseTest@72057ecf]" name="checkWithSupplierAdded" class="TestcaseScripts.AddPurchaseTest"/>
        <method signature="ProductsTest.CurrentDateDisplay()[pri:1, instance:TestcaseScripts.ProductsTest@192d43ce]" name="CurrentDateDisplay" class="TestcaseScripts.ProductsTest"/>
        <method signature="ProductsTest.DisableManageStock()[pri:4, instance:TestcaseScripts.ProductsTest@192d43ce]" name="DisableManageStock" class="TestcaseScripts.ProductsTest"/>
        <method signature="ProductsTest.EnableManageStock()[pri:5, instance:TestcaseScripts.ProductsTest@192d43ce]" name="EnableManageStock" class="TestcaseScripts.ProductsTest"/>
        <method signature="ProductsTest.RemoveDocInAddPurchase()[pri:11, instance:TestcaseScripts.ProductsTest@192d43ce]" name="RemoveDocInAddPurchase" class="TestcaseScripts.ProductsTest"/>
        <method signature="ProductsTest.addNewBrandToList()[pri:2, instance:TestcaseScripts.ProductsTest@192d43ce]" name="addNewBrandToList" class="TestcaseScripts.ProductsTest"/>
        <method signature="ProductsTest.addNewUnitToList()[pri:6, instance:TestcaseScripts.ProductsTest@192d43ce]" name="addNewUnitToList" class="TestcaseScripts.ProductsTest"/>
        <method signature="ProductsTest.addProductWithoutAlertQty()[pri:8, instance:TestcaseScripts.ProductsTest@192d43ce]" name="addProductWithoutAlertQty" class="TestcaseScripts.ProductsTest"/>
        <method signature="ProductsTest.addProductWithoutProductName()[pri:7, instance:TestcaseScripts.ProductsTest@192d43ce]" name="addProductWithoutProductName" class="TestcaseScripts.ProductsTest"/>
        <method signature="ProductsTest.addProductWithoutTax()[pri:9, instance:TestcaseScripts.ProductsTest@192d43ce]" name="addProductWithoutTax" class="TestcaseScripts.ProductsTest"/>
        <method signature="ProductsTest.addProductWithoutUnit()[pri:3, instance:TestcaseScripts.ProductsTest@192d43ce]" name="addProductWithoutUnit" class="TestcaseScripts.ProductsTest"/>
        <method signature="ProductsTest.addProducts()[pri:12, instance:TestcaseScripts.ProductsTest@192d43ce]" name="addProducts" class="TestcaseScripts.ProductsTest"/>
        <method signature="ProductsTest.attachDocInAddPurchase()[pri:10, instance:TestcaseScripts.ProductsTest@192d43ce]" name="attachDocInAddPurchase" class="TestcaseScripts.ProductsTest"/>
        <method signature="ProductsTest.checkWithBrand()[pri:14, instance:TestcaseScripts.ProductsTest@192d43ce]" name="checkWithBrand" class="TestcaseScripts.ProductsTest"/>
        <method signature="ProductsTest.checkWithCategory()[pri:15, instance:TestcaseScripts.ProductsTest@192d43ce]" name="checkWithCategory" class="TestcaseScripts.ProductsTest"/>
        <method signature="ProductsTest.checkWithProductName()[pri:13, instance:TestcaseScripts.ProductsTest@192d43ce]" name="checkWithProductName" class="TestcaseScripts.ProductsTest"/>
        <method signature="ProductsTest.checkWithProductType()[pri:16, instance:TestcaseScripts.ProductsTest@192d43ce]" name="checkWithProductType" class="TestcaseScripts.ProductsTest"/>
      </group> <!-- Regression -->
      <group name="Smoke">
        <method signature="LoginTest.verifyInvalidLoginfromExcel()[pri:1, instance:TestcaseScripts.LoginTest@1dde4cb2]" name="verifyInvalidLoginfromExcel" class="TestcaseScripts.LoginTest"/>
        <method signature="LoginTest.verifyLogin1(java.lang.String,java.lang.String)[pri:2, instance:TestcaseScripts.LoginTest@1dde4cb2]" name="verifyLogin1" class="TestcaseScripts.LoginTest"/>
      </group> <!-- Smoke -->
    </groups>
    <test name="Test" duration-ms="621342" started-at="2023-01-05T13:11:06 GST" finished-at="2023-01-05T13:21:28 GST">
      <class name="TestcaseScripts.ProductsTest">
        <test-method status="PASS" signature="beforeTest(java.lang.String,java.lang.String)[pri:0, instance:TestcaseScripts.ProductsTest@192d43ce]" name="beforeTest" is-config="true" duration-ms="73442" started-at="2023-01-05T13:11:31 GST" finished-at="2023-01-05T13:12:45 GST">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://qalegend.com/billing/public/login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="CurrentDateDisplay()[pri:1, instance:TestcaseScripts.ProductsTest@192d43ce]" name="CurrentDateDisplay" duration-ms="76" started-at="2023-01-05T13:12:59 GST" description="Checking for the Display of Current Date in menubar" finished-at="2023-01-05T13:13:00 GST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CurrentDateDisplay -->
        <test-method status="PASS" signature="addNewBrandToList()[pri:2, instance:TestcaseScripts.ProductsTest@192d43ce]" name="addNewBrandToList" duration-ms="24761" started-at="2023-01-05T13:13:00 GST" description="Adding new Brand to the BrandList" finished-at="2023-01-05T13:13:24 GST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewBrandToList -->
        <test-method status="PASS" signature="addProductWithoutUnit()[pri:3, instance:TestcaseScripts.ProductsTest@192d43ce]" name="addProductWithoutUnit" duration-ms="12118" started-at="2023-01-05T13:13:24 GST" description="Adding Products without Unit" finished-at="2023-01-05T13:13:36 GST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addProductWithoutUnit -->
        <test-method status="PASS" signature="DisableManageStock()[pri:4, instance:TestcaseScripts.ProductsTest@192d43ce]" name="DisableManageStock" duration-ms="13817" started-at="2023-01-05T13:13:36 GST" description="Checking for the Manage Stock field can be disabled" finished-at="2023-01-05T13:13:50 GST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DisableManageStock -->
        <test-method status="PASS" signature="EnableManageStock()[pri:5, instance:TestcaseScripts.ProductsTest@192d43ce]" name="EnableManageStock" duration-ms="15114" started-at="2023-01-05T13:13:50 GST" description="Checking for the Manage Stock field enable property" finished-at="2023-01-05T13:14:05 GST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EnableManageStock -->
        <test-method status="PASS" signature="addNewUnitToList()[pri:6, instance:TestcaseScripts.ProductsTest@192d43ce]" name="addNewUnitToList" duration-ms="12537" started-at="2023-01-05T13:14:05 GST" description="Adding new Unit to the UnitList" finished-at="2023-01-05T13:14:18 GST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewUnitToList -->
        <test-method status="PASS" signature="addProductWithoutProductName()[pri:7, instance:TestcaseScripts.ProductsTest@192d43ce]" name="addProductWithoutProductName" duration-ms="12234" started-at="2023-01-05T13:14:18 GST" description="Adding Products without Product Name" finished-at="2023-01-05T13:14:30 GST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addProductWithoutProductName -->
        <test-method status="PASS" signature="addProductWithoutAlertQty()[pri:8, instance:TestcaseScripts.ProductsTest@192d43ce]" name="addProductWithoutAlertQty" duration-ms="12491" started-at="2023-01-05T13:14:30 GST" description="Adding Products without Alert Quantity" finished-at="2023-01-05T13:14:43 GST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addProductWithoutAlertQty -->
        <test-method status="PASS" signature="addProductWithoutTax()[pri:9, instance:TestcaseScripts.ProductsTest@192d43ce]" name="addProductWithoutTax" duration-ms="12295" started-at="2023-01-05T13:14:43 GST" description="Adding Products without Exc.Tax" finished-at="2023-01-05T13:14:55 GST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addProductWithoutTax -->
        <test-method status="PASS" signature="attachDocInAddPurchase()[pri:10, instance:TestcaseScripts.ProductsTest@192d43ce]" name="attachDocInAddPurchase" duration-ms="16147" started-at="2023-01-05T13:14:55 GST" description="Validate the Image Uploading in Add Products." finished-at="2023-01-05T13:15:11 GST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- attachDocInAddPurchase -->
        <test-method status="PASS" signature="RemoveDocInAddPurchase()[pri:11, instance:TestcaseScripts.ProductsTest@192d43ce]" name="RemoveDocInAddPurchase" duration-ms="16188" started-at="2023-01-05T13:15:11 GST" description="Validate the Removal of Uploaded Image in Add Products." finished-at="2023-01-05T13:15:27 GST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RemoveDocInAddPurchase -->
        <test-method status="PASS" signature="addProducts()[pri:12, instance:TestcaseScripts.ProductsTest@192d43ce]" name="addProducts" duration-ms="24530" started-at="2023-01-05T13:15:27 GST" description="Adding new Product successfully" finished-at="2023-01-05T13:15:52 GST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addProducts -->
        <test-method status="PASS" signature="checkWithProductName()[pri:13, instance:TestcaseScripts.ProductsTest@192d43ce]" name="checkWithProductName" duration-ms="14331" started-at="2023-01-05T13:15:52 GST" description="Checking the Product Name added correctly." finished-at="2023-01-05T13:16:06 GST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkWithProductName -->
        <test-method status="PASS" signature="checkWithBrand()[pri:14, instance:TestcaseScripts.ProductsTest@192d43ce]" name="checkWithBrand" duration-ms="14259" started-at="2023-01-05T13:16:06 GST" description="Checking the Brand added correctly." finished-at="2023-01-05T13:16:20 GST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkWithBrand -->
        <test-method status="PASS" signature="checkWithCategory()[pri:15, instance:TestcaseScripts.ProductsTest@192d43ce]" name="checkWithCategory" duration-ms="16252" started-at="2023-01-05T13:16:20 GST" description="Checking the Category added correctly." finished-at="2023-01-05T13:16:37 GST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkWithCategory -->
        <test-method status="PASS" signature="checkWithProductType()[pri:16, instance:TestcaseScripts.ProductsTest@192d43ce]" name="checkWithProductType" duration-ms="14266" started-at="2023-01-05T13:16:37 GST" description="Checking the Product Type added correctly." finished-at="2023-01-05T13:16:51 GST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkWithProductType -->
        <test-method status="FAIL" signature="afterTest()[pri:0, instance:TestcaseScripts.ProductsTest@192d43ce]" name="afterTest" is-config="true" duration-ms="3" started-at="2023-01-05T13:21:28 GST" finished-at="2023-01-05T13:21:28 GST">
          <exception class="org.openqa.selenium.NoSuchSessionException">
            <message>
              <![CDATA[invalid session id
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'RS', ip: '192.168.0.175', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_202'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [a788c11d8dc9dbadde4cad3edff24911, close {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\RS\AppData\Local\T...}, goog:chromeOptions: {debuggerAddress: localhost:55713}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:55713/devtoo..., se:cdpVersion: 108.0.5359.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: a788c11d8dc9dbadde4cad3edff24911]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchSessionException: invalid session id
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'RS', ip: '192.168.0.175', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_202'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [a788c11d8dc9dbadde4cad3edff24911, close {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\RS\AppData\Local\T...}, goog:chromeOptions: {debuggerAddress: localhost:55713}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:55713/devtoo..., se:cdpVersion: 108.0.5359.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: a788c11d8dc9dbadde4cad3edff24911
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:606)
at org.openqa.selenium.remote.RemoteWebDriver.close(RemoteWebDriver.java:432)
at utilities.BrowserLaunch.closeBrowser(BrowserLaunch.java:38)
at TestcaseScripts.ProductsTest.afterTest(ProductsTest.java:189)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.TestRunner.invokeTestConfigurations(TestRunner.java:637)
at org.testng.TestRunner.afterRun(TestRunner.java:877)
at org.testng.TestRunner.run(TestRunner.java:599)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchSessionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- TestcaseScripts.ProductsTest -->
      <class name="TestcaseScripts.AddPurchaseTest">
        <test-method status="PASS" signature="beforeTest(java.lang.String,java.lang.String)[pri:0, instance:TestcaseScripts.AddPurchaseTest@72057ecf]" name="beforeTest" is-config="true" duration-ms="17642" started-at="2023-01-05T13:11:06 GST" finished-at="2023-01-05T13:11:24 GST">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://qalegend.com/billing/public/login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="addSupplierDetails()[pri:1, instance:TestcaseScripts.AddPurchaseTest@72057ecf]" name="addSupplierDetails" duration-ms="15212" started-at="2023-01-05T13:16:51 GST" description="Adding new Supplier details in Add Purchase." finished-at="2023-01-05T13:17:06 GST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addSupplierDetails -->
        <test-method status="PASS" signature="attachDocInAddPurchase()[pri:2, instance:TestcaseScripts.AddPurchaseTest@72057ecf]" name="attachDocInAddPurchase" duration-ms="16143" started-at="2023-01-05T13:17:06 GST" description="Validate the File Uploading in Add Purchase." finished-at="2023-01-05T13:17:22 GST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- attachDocInAddPurchase -->
        <test-method status="PASS" signature="RemoveDocInAddPurchase()[pri:3, instance:TestcaseScripts.AddPurchaseTest@72057ecf]" name="RemoveDocInAddPurchase" duration-ms="16146" started-at="2023-01-05T13:17:22 GST" description="Validate the Removal of Uploaded File in Add Purchase." finished-at="2023-01-05T13:17:38 GST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RemoveDocInAddPurchase -->
        <test-method status="PASS" signature="addPurchaseWithoutSupplier()[pri:4, instance:TestcaseScripts.AddPurchaseTest@72057ecf]" name="addPurchaseWithoutSupplier" duration-ms="31108" started-at="2023-01-05T13:17:38 GST" description="Adding Purchase without Supplier field" finished-at="2023-01-05T13:18:10 GST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addPurchaseWithoutSupplier -->
        <test-method status="PASS" signature="addPurchaseWithoutStatus()[pri:5, instance:TestcaseScripts.AddPurchaseTest@72057ecf]" name="addPurchaseWithoutStatus" duration-ms="34844" started-at="2023-01-05T13:18:10 GST" description="Adding Purchase without Purchase Status" finished-at="2023-01-05T13:18:44 GST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addPurchaseWithoutStatus -->
        <test-method status="PASS" signature="addPurchaseWithoutLocation()[pri:6, instance:TestcaseScripts.AddPurchaseTest@72057ecf]" name="addPurchaseWithoutLocation" duration-ms="37771" started-at="2023-01-05T13:18:44 GST" description="Adding Purchase without Business Location" finished-at="2023-01-05T13:19:22 GST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addPurchaseWithoutLocation -->
        <test-method status="PASS" signature="addPurchaseWithoutProduct()[pri:7, instance:TestcaseScripts.AddPurchaseTest@72057ecf]" name="addPurchaseWithoutProduct" duration-ms="26296" started-at="2023-01-05T13:19:22 GST" description="Adding Purchase without Produts." finished-at="2023-01-05T13:19:48 GST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addPurchaseWithoutProduct -->
        <test-method status="PASS" signature="addNewPurchase()[pri:8, instance:TestcaseScripts.AddPurchaseTest@72057ecf]" name="addNewPurchase" duration-ms="42335" started-at="2023-01-05T13:19:48 GST" description="Adding new Purchase details." finished-at="2023-01-05T13:20:31 GST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewPurchase -->
        <test-method status="PASS" signature="checkWithSupplierAdded()[pri:9, instance:TestcaseScripts.AddPurchaseTest@72057ecf]" name="checkWithSupplierAdded" duration-ms="14079" started-at="2023-01-05T13:20:31 GST" description="Checking the Supplier field added correctly." finished-at="2023-01-05T13:20:45 GST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkWithSupplierAdded -->
        <test-method status="PASS" signature="checkWithLocationAdded()[pri:10, instance:TestcaseScripts.AddPurchaseTest@72057ecf]" name="checkWithLocationAdded" duration-ms="14069" started-at="2023-01-05T13:20:45 GST" description="Checking the Location field added correctly." finished-at="2023-01-05T13:20:59 GST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkWithLocationAdded -->
        <test-method status="PASS" signature="checkWithPurchaseStatusAdded()[pri:11, instance:TestcaseScripts.AddPurchaseTest@72057ecf]" name="checkWithPurchaseStatusAdded" duration-ms="14085" started-at="2023-01-05T13:20:59 GST" description="Checking the Purchase Status field added correctly." finished-at="2023-01-05T13:21:13 GST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkWithPurchaseStatusAdded -->
        <test-method status="PASS" signature="checkWithGrandTotalAdded()[pri:12, instance:TestcaseScripts.AddPurchaseTest@72057ecf]" name="checkWithGrandTotalAdded" duration-ms="14074" started-at="2023-01-05T13:21:13 GST" description="Checking the Grand Total field added correctly." finished-at="2023-01-05T13:21:27 GST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkWithGrandTotalAdded -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:TestcaseScripts.AddPurchaseTest@72057ecf]" name="afterTest" is-config="true" duration-ms="194" started-at="2023-01-05T13:21:27 GST" finished-at="2023-01-05T13:21:27 GST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- TestcaseScripts.AddPurchaseTest -->
      <class name="TestcaseScripts.LoginTest">
        <test-method status="PASS" signature="beforeTest(java.lang.String,java.lang.String)[pri:0, instance:TestcaseScripts.LoginTest@1dde4cb2]" name="beforeTest" is-config="true" duration-ms="7281" started-at="2023-01-05T13:11:24 GST" finished-at="2023-01-05T13:11:31 GST">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://qalegend.com/billing/public/login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="verifyInvalidLoginfromExcel()[pri:1, instance:TestcaseScripts.LoginTest@1dde4cb2]" name="verifyInvalidLoginfromExcel" duration-ms="5767" started-at="2023-01-05T13:12:45 GST" description="Invalid Login scenario with wrong Username " finished-at="2023-01-05T13:12:51 GST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidLoginfromExcel -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestcaseScripts.LoginTest@1dde4cb2]" name="afterMethod" is-config="true" duration-ms="2" started-at="2023-01-05T13:12:51 GST" finished-at="2023-01-05T13:12:51 GST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyInvalidLoginfromExcel status=SUCCESS method=LoginTest.verifyInvalidLoginfromExcel()[pri:1, instance:TestcaseScripts.LoginTest@1dde4cb2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyLogin1(java.lang.String,java.lang.String)[pri:2, instance:TestcaseScripts.LoginTest@1dde4cb2]" name="verifyLogin1" duration-ms="8813" started-at="2023-01-05T13:12:51 GST" description="Login scenario with Valid credentials." data-provider="data-provider" finished-at="2023-01-05T13:12:59 GST">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogin1 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestcaseScripts.LoginTest@1dde4cb2]" name="afterMethod" is-config="true" duration-ms="3" started-at="2023-01-05T13:12:59 GST" finished-at="2023-01-05T13:12:59 GST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLogin1 status=SUCCESS method=LoginTest.verifyLogin1(java.lang.String,java.lang.String)[pri:2, instance:TestcaseScripts.LoginTest@1dde4cb2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="afterTest()[pri:0, instance:TestcaseScripts.LoginTest@1dde4cb2]" name="afterTest" is-config="true" duration-ms="267" started-at="2023-01-05T13:21:27 GST" finished-at="2023-01-05T13:21:28 GST">
          <exception class="org.openqa.selenium.NoSuchSessionException">
            <message>
              <![CDATA[invalid session id
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'RS', ip: '192.168.0.175', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_202'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [a788c11d8dc9dbadde4cad3edff24911, close {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\RS\AppData\Local\T...}, goog:chromeOptions: {debuggerAddress: localhost:55713}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:55713/devtoo..., se:cdpVersion: 108.0.5359.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: a788c11d8dc9dbadde4cad3edff24911]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchSessionException: invalid session id
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'RS', ip: '192.168.0.175', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_202'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [a788c11d8dc9dbadde4cad3edff24911, close {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\RS\AppData\Local\T...}, goog:chromeOptions: {debuggerAddress: localhost:55713}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:55713/devtoo..., se:cdpVersion: 108.0.5359.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: a788c11d8dc9dbadde4cad3edff24911
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:606)
at org.openqa.selenium.remote.RemoteWebDriver.close(RemoteWebDriver.java:432)
at utilities.BrowserLaunch.closeBrowser(BrowserLaunch.java:38)
at TestcaseScripts.LoginTest.afterTest(LoginTest.java:100)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.TestRunner.invokeTestConfigurations(TestRunner.java:637)
at org.testng.TestRunner.afterRun(TestRunner.java:877)
at org.testng.TestRunner.run(TestRunner.java:599)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchSessionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- TestcaseScripts.LoginTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
